{"ast":null,"code":"/*\r\n - getFolders()\r\n - saveFolders()\r\n - savePinInFolder()\r\n*/\n\nconst generateId = () => {\n  return `${Math.floor(Math.random() * 100000).toString(16)}-${Math.floor(Math.random() * 100000).toString(16)}`;\n};\nconst saveFolders = async folders => {\n  localStorage.setItem('folders', JSON.stringify(folders));\n};\nexport const saveFolder = async folderName => {\n  /* PASSOS\r\n  - Pegar lista/array de pastas -> getFolders()\r\n  - Adicionar a pasta dentro desse array\r\n  - Salva novamente no localStorage\r\n  */\n\n  const folders = await getFolders();\n  const newFolder = {\n    id: generateId(),\n    name: folderName,\n    pins: []\n  };\n  folders.push(newFolder);\n  await saveFolders(folders);\n  return newFolder;\n};\nexport const savePinFolder = async (folderId, pinId) => {\n  /*\r\n   - Listar coleção / array de pastas Storage\r\n   - Encontrar a pasta que queremos adicionar o pin\r\n   - Adicionar o pinId na pasta\r\n   - Salvar pastas no Storage novamente\r\n  */\n\n  const folders = await getFolders();\n\n  //RETORNA UM ELEMENTO DENTRO DE UM ARRAY\n  const folderIndex = folders.findIdex(function (folder) {\n    return folder.id === folderId;\n  });\n  if (folderIndex !== -1) {\n    folders[folderIndex].pins.push(pinId);\n  }\n  await saveFolders(folders);\n  return {\n    ...folders[folderIndex]\n  };\n};","map":{"version":3,"names":["generateId","Math","floor","random","toString","saveFolders","folders","localStorage","setItem","JSON","stringify","saveFolder","folderName","getFolders","newFolder","id","name","pins","push","savePinFolder","folderId","pinId","folderIndex","findIdex","folder"],"sources":["C:/Users/Maytê/Documents/Maytê/FATEC/Mover By Descomplica/react/descompin-projeto/src/services/pinService.js"],"sourcesContent":[" /*\r\n  - getFolders()\r\n  - saveFolders()\r\n  - savePinInFolder()\r\n */\r\n\r\n\r\n  \r\n  const generateId = () => {\r\n   return `${(Math.floor(Math.random() * 100_000)).toString(16)}-${(Math.floor(Math.random() * 100_000)).toString(16)}`\r\n };\r\n\r\n \r\n\r\n const saveFolders = async (folders) => {\r\n    localStorage.setItem('folders', JSON.stringify(folders));\r\n };\r\n\r\n\r\n\r\n  export const saveFolder = async (folderName) =>{\r\n    /* PASSOS\r\n    - Pegar lista/array de pastas -> getFolders()\r\n    - Adicionar a pasta dentro desse array\r\n    - Salva novamente no localStorage\r\n    */\r\n\r\n    const folders = await getFolders();\r\n\r\n    const newFolder = {\r\n        id: generateId(),\r\n        name: folderName,\r\n        pins: []\r\n    };\r\n\r\n    folders.push(newFolder);\r\n \r\n    await saveFolders(folders);\r\n\r\n    return newFolder;\r\n  }\r\n  \r\n  export const savePinFolder = async (folderId, pinId)   => {\r\n    /*\r\n     - Listar coleção / array de pastas Storage\r\n     - Encontrar a pasta que queremos adicionar o pin\r\n     - Adicionar o pinId na pasta\r\n     - Salvar pastas no Storage novamente\r\n    */\r\n\r\n     const folders = await getFolders();\r\n\r\n        //RETORNA UM ELEMENTO DENTRO DE UM ARRAY\r\n     const folderIndex = folders.findIdex(function(folder){\r\n        return folder.id === folderId; \r\n     });\r\n\r\n     if (folderIndex !== -1){\r\n        folders[folderIndex].pins.push(pinId);\r\n     }\r\n\r\n     await saveFolders(folders);\r\n\r\n     return { ...folders[folderIndex] }; \r\n\r\n    }"],"mappings":"AAAC;AACD;AACA;AACA;AACA;;AAIE,MAAMA,UAAU,GAAGA,CAAA,KAAM;EACxB,OAAQ,GAAGC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,EAAE,GAAG,MAAO,CAAC,CAAEC,QAAQ,CAAC,EAAE,CAAE,IAAIH,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,EAAE,GAAG,MAAO,CAAC,CAAEC,QAAQ,CAAC,EAAE,CAAE,EAAC;AACtH,CAAC;AAID,MAAMC,WAAW,GAAG,MAAOC,OAAO,IAAK;EACpCC,YAAY,CAACC,OAAO,CAAC,SAAS,EAAEC,IAAI,CAACC,SAAS,CAACJ,OAAO,CAAC,CAAC;AAC3D,CAAC;AAIA,OAAO,MAAMK,UAAU,GAAG,MAAOC,UAAU,IAAI;EAC7C;AACJ;AACA;AACA;AACA;;EAEI,MAAMN,OAAO,GAAG,MAAMO,UAAU,EAAE;EAElC,MAAMC,SAAS,GAAG;IACdC,EAAE,EAAEf,UAAU,EAAE;IAChBgB,IAAI,EAAEJ,UAAU;IAChBK,IAAI,EAAE;EACV,CAAC;EAEDX,OAAO,CAACY,IAAI,CAACJ,SAAS,CAAC;EAEvB,MAAMT,WAAW,CAACC,OAAO,CAAC;EAE1B,OAAOQ,SAAS;AAClB,CAAC;AAED,OAAO,MAAMK,aAAa,GAAG,MAAAA,CAAOC,QAAQ,EAAEC,KAAK,KAAO;EACxD;AACJ;AACA;AACA;AACA;AACA;;EAEK,MAAMf,OAAO,GAAG,MAAMO,UAAU,EAAE;;EAE/B;EACH,MAAMS,WAAW,GAAGhB,OAAO,CAACiB,QAAQ,CAAC,UAASC,MAAM,EAAC;IAClD,OAAOA,MAAM,CAACT,EAAE,KAAKK,QAAQ;EAChC,CAAC,CAAC;EAEF,IAAIE,WAAW,KAAK,CAAC,CAAC,EAAC;IACpBhB,OAAO,CAACgB,WAAW,CAAC,CAACL,IAAI,CAACC,IAAI,CAACG,KAAK,CAAC;EACxC;EAEA,MAAMhB,WAAW,CAACC,OAAO,CAAC;EAE1B,OAAO;IAAE,GAAGA,OAAO,CAACgB,WAAW;EAAE,CAAC;AAEnC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}